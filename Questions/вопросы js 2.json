[
  {
    "text": "Что делает метод `Array.prototype.forEach()`?",
    "options": ["Применяет функцию к каждому элементу массива", "Создает новый массив", "Удаляет элементы массива", "Сортирует массив"],
    "correctAnswer": "Применяет функцию к каждому элементу массива",
    "isOpenEnded": false,
    "explanation": "Метод `forEach()` перебирает элементы массива и вызывает указанную функцию для каждого из них. Но он **не возвращает новый массив**."
  },
  {
    "text": "Что вернет `typeof NaN`?",
    "options": ["number", "NaN", "undefined", "object"],
    "correctAnswer": "number",
    "isOpenEnded": false,
    "explanation": "`NaN` считается типом `number` в JavaScript, потому что это результат невалидной математической операции."
  },
  {
    "text": "Как проверить, является ли переменная массивом?",
    "options": ["Array.isArray(value)", "typeof value === 'array'", "value instanceof Array", "value === Array"],
    "correctAnswer": "Array.isArray(value)",
    "isOpenEnded": false,
    "explanation": "`Array.isArray(value)` возвращает `true`, если `value` — массив. `typeof` не работает для массивов, потому что они являются объектами."
  },
  {
    "text": "Что делает оператор `??` (нулевой оператор объединения)?",
    "options": ["Возвращает правое значение, если левое `null` или `undefined`", "Сравнивает два значения", "Преобразует `null` в пустую строку", "Вызывает исключение, если значение `null`"],
    "correctAnswer": "Возвращает правое значение, если левое `null` или `undefined`",
    "isOpenEnded": false,
    "explanation": "Оператор `??` используется для присвоения **действительного значения** в случае `null` или `undefined`. Например: `let user = name ?? 'Гость'`."
  },
  {
    "text": "Напишите стрелочную функцию, которая проверяет, является ли число четным.",
    "options": [],
    "correctAnswer": "(num) => num % 2 === 0",
    "isOpenEnded": true,
    "explanation": "Функция использует оператор `%` (остаток от деления), чтобы проверить, делится ли число без остатка на 2."
  },
  {
    "text": "Что делает метод `Array.prototype.find()`?",
    "options": ["Возвращает первый элемент, соответствующий условию", "Создает новый массив с найденными элементами", "Удаляет элементы, соответствующие условию", "Применяет функцию к каждому элементу массива"],
    "correctAnswer": "Возвращает первый элемент, соответствующий условию",
    "isOpenEnded": false,
    "explanation": "Метод `find()` возвращает **первый** элемент массива, который удовлетворяет переданному в него условию, или `undefined`, если элемента нет."
  },
  {
    "text": "Как объявить переменную, которая не изменяется?",
    "options": ["let", "var", "const", "static"],
    "correctAnswer": "const",
    "isOpenEnded": false,
    "explanation": "`const` объявляет **константу**, которую нельзя переназначить. Однако её **свойства (если это объект) можно менять**."
  },
  {
    "text": "Какой метод массива используется для объединения элементов в строку?",
    "options": ["join()", "concat()", "reduce()", "split()"],
    "correctAnswer": "join()",
    "isOpenEnded": false,
    "explanation": "`join(separator)` соединяет элементы массива в одну строку, используя **разделитель**. Например, `['a', 'b', 'c'].join('-')` возвращает `'a-b-c'`."
  },
  {
    "text": "Какой результат выполнения `Boolean([])`?",
    "options": ["false", "true", "null", "undefined"],
    "correctAnswer": "true",
    "isOpenEnded": false,
    "explanation": "Пустой массив (`[]`) является **истинным значением** (`true`), потому что он считается объектом в JavaScript."
  },
  {
    "text": "Напишите функцию, которая возвращает случайное число от 1 до 10.",
    "options": [],
    "correctAnswer": "Math.floor(Math.random() * 10) + 1",
    "isOpenEnded": true,
    "explanation": "`Math.random()` генерирует число от `0` до `1`. Используем `Math.floor()` и умножаем на `10`, чтобы получить диапазон от `1` до `10`."
  }
]
